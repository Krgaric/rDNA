name: DNA build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  gradle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: gradle/wrapper-validation-action@v1
    - uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
        cache: gradle
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Execute Gradle build for DNA
      run: ./gradlew build
    
    - name: Store artifacts
      uses: actions/upload-artifact@v3
      with:
        name: DNA
        path: dna/build/libs

  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::covr
          needs: check, coverage
          working-directory: rDNA

      - uses: r-lib/actions/check-r-package@v2
        with:
          working-directory: rDNA
          upload-snapshots: true

      - name: Test coverage
        run: covr::codecov(quiet = FALSE)
        shell: Rscript {0}
