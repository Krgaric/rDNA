% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rDNA.R
\name{dna_plotHive}
\alias{dna_plotHive}
\title{Produces a hive plot from DNA data}
\usage{
dna_plotHive(
  x,
  axis = "type",
  sort_by = "degree",
  axis_label = FALSE,
  axis_colors = "auto",
  custom_colors = character(),
  edge_weight = TRUE,
  edge_size_range = c(0.2, 2),
  edge_color = "grey",
  edge_alpha = 1,
  node_label = TRUE,
  label_repel = 0.5,
  label_lines = FALSE,
  font_size = 6,
  theme = "graph",
  truncate = 30,
  groups = list(),
  threshold = NULL,
  seed = 12345,
  show_legend = TRUE,
  ...
)
}
\arguments{
\item{x}{A \code{dna_network_onemode} object created by the
\link{dna_network} function.}

\item{axis}{Takes the name of an attribute in DNA (i.e. \code{"id"},
\code{"value"}, \code{"color"}, \code{"type"}, \code{"alias"},
\code{"notes"} or \code{"frequency"}) or \code{"group"} to color nodes.
The option \code{"group"} only makes sense if you provide group membership
information to the \code{groups} argument.}

\item{sort_by}{Either the name of an attribute to sort by or a name vector
with values to sort by. Possible values are \code{"frequency"},
\code{"degree"} (to sort by in-degree of the actors) or \code{NULL} to
place nodes sequentially. A named vector can be provided, with one value
per actor (see example).}

\item{axis_label}{If \code{TRUE}, axis labels are plotted at the end of the
axis and are removed from the legend.}

\item{axis_colors}{There are five options for coloring the axes: (1.)
\code{"auto"} uses \code{"identity"} if \code{node_attribute = "color"} and
leaves the standard ggplot2 colors otherwise; (2.) \code{"identity"} tries
to use \code{axis} for colors (i.e., if you set \code{axis = "color"} or
have provided a color name in another attribute field in DNA) but fails if
names are not plottable colors; (3) \code{"manual"} lets you provide
colors via custom_colors; (4.) \code{"brewer"} automatically selects nice
colors from a \code{RColorBrewer} palette (palettes can be set in
custom_colors); and (5.) \code{"single"} uses the first value in
custom_colors for all axes}

\item{custom_colors}{Takes custom values to control the axes colors. The
format of the necessary values depends on the setting of \code{axis}: When
\code{axis = "manual"}, a character object containing the enough color
names for all groups is needed; When \code{axis = "brewer"} you need to
supply a a palette from \code{RColorBrewer} (otherwise defaults to "Set3");
When \code{axis "single"} only a single color name is needed (defaults to
"red").}

\item{edge_weight}{If \code{TRUE}, edge weights will be used to determine
width of the lines between nodes. The minimum and maximum width can be
controlled with \code{edge_size_range}.}

\item{edge_size_range}{Takes a numeric vector with two values: minimum and
maximum \code{edge_weight}.}

\item{edge_color}{Provide the name of a color to use for edges.}

\item{edge_alpha}{Takes numeric values to control the alpha-transparency of
edges. Possible values range from \code{0} (fully transparent) to \code{1}
(fully visible).}

\item{node_label}{If \code{TRUE}, text is added next to nodes to label them.
If "label", a rectangle is drawn underneath the text, often making it
easier to read. If \code{FALSE} no lables are drawn.}

\item{label_repel}{Controls how far from the labels will be put from nodes.
The exact position of text is random but overplotting is avoided.}

\item{label_lines}{If \code{TRUE}, draws lines between nodes and labels if
labels are further away from nodes.}

\item{font_size}{Control the font size of the node labels.}

\item{theme}{Provide the name of a theme. Available options are
\code{"graph"} (which is customized to look best with networks), "bw",
"void", "light" and \code{"dark"}. Leave empty to use standard ggplot
theme. Choose other themes or customize with tools from \link{ggplot2} by
adding \code{+ theme_*} after this function.}

\item{truncate}{Sets the number of characters to which labels should be
truncated. Value \code{Inf} turns off truncation.}

\item{groups}{Takes a \code{dna_cluster} object or a named list or character
object. In case of a named list or character object, the names must match
the values of \code{variable1} used during network construction (see
example).}

\item{threshold}{Minimum threshold for which edges should be plotted.}

\item{seed}{Numeric value passed to \link{set.seed}. The default is as good
as any other value but provides that plots are always reproducible.}

\item{show_legend}{Logical. Should a legend be displayed.}

\item{...}{Arguments passed on to \link[ggraph]{create_layout}.}
}
\description{
This function is an easy wrapper to create hive plots from one-mode networks
with data from DNA.
}
\details{
This function is a convenience wrapper to plot networks with
\link[ggraph]{ggraph} from one-mode network objects created via
\link{dna_network} rDNA.
}
\examples{
\dontrun{
dna_init()
conn <- dna_connection(dna_sample())

# Plot from one-mode network
nw <- dna_network(conn, networkType = "onemode")
dna_plotHive(nw)

# Use custom sorting
sorting <- c("Alliance to Save Energy" = 1,
             "Energy and Environmental Analysis, Inc." = 2,
             "Environmental Protection Agency" = 3,
             "National Petrochemical & Refiners Association" = 4,
             "Senate" = 5,
             "Sierra Club" = 6,
             "U.S. Public Interest Research Group"= 7)

dna_plotHive(nw, sort_by = sorting)

# Use groups from dna_cluster
clust <- dna_cluster(conn, cutree.k = 2)
dna_plotHive(nw, axis = "group", groups = clust)

# Use custom groups
groups <- c("Alliance to Save Energy" = "group 1",
            "Energy and Environmental Analysis, Inc." = "group 2",
            "Environmental Protection Agency" = "group 3",
            "National Petrochemical & Refiners Association" = "group 1",
            "Senate" = "group 2",
            "Sierra Club" = "group 3",
            "U.S. Public Interest Research Group"= "group 1")

dna_plotHive(nw, axis = "group", groups = groups)
}

}
\author{
Johannes B. Gruber
}
