% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rDNA.R
\name{dna_recastVariable}
\alias{dna_recastVariable}
\title{Recast a variable into a different data type}
\usage{
dna_recastVariable(
  connection,
  statementType,
  variable,
  simulate = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{connection}{A \code{dna_connection} object created by the
\code{dna_connection} function.}

\item{statementType}{The statement type in which the variable is defined that
should be recast into a different data type. The statement type can be
supplied as an integer ID or character string, for example \code{1} or
\code{"DNA Statement"}.}

\item{variable}{The name of the variable that should be recast into a
different data type.}

\item{simulate}{Should the changes only be simulated instead of actually
applied to the DNA connection and the SQL database? This can help to
plan more complex recode operations.}

\item{verbose}{Print details about the recode operations?}
}
\description{
Recast a variable into a different data type.
}
\details{
This function converts a variable into a different data type. The user
supplies the statement type in which the variable is defined and the variable
name, and the variable is converted into a different data type.

Depending on the current data type of the variable, different actions are
taken as follows:
\describe{
 \item{"short text"}{Will be converted into "long text".}
 \item{"long text"}{Will be converted into "short text". The function goes
   through all statements and truncates the respective values if they are
   longer than 200 characters, both in the statements and attributes.}
 \item{"boolean"}{Will be converted into "integer" by recoding \code{0} into
   \code{-1} and keeping \code{1} as \code{1}.}
 \item{"integer"}{Will be converted into "boolean". If there are precisely
   two values across all statements, the smaller value will be recoded into
   \code{0} and the larger value into \code{1}. If there is only one value
   across all statements, this value will be recoded as \code{1}. If there
   are no statements of this statement type, no recoding will be done. If
   there are more than two values across all statements, an error message
   will be printed.}
}

By default, changes are only simulated, but this can be changed using the
\code{simulate} argument in order to actually apply the changes to the
database.
}
\author{
Philip Leifeld
}
